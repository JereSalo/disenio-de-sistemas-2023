@startuml


interface FormaNotificacion{
 +recibirIncidente(RecepcionIncidenteParams): void
 +notificarIncidentesPendientes(Persona): void
}

class CuandoSuceden{
 +recibirIncidente(RecepcionIncidenteParams): void
 +notificarIncidentesPendientes(Persona): void
}

class SinApuros{

 +recibirIncidente(Incidente): void
 +notificarIncidentesPendientes(Persona): void
}

abstract class Notificador{
 #enviar(Persona, String): void
 -armarMensaje(Incidente...): String
 +notificarIncidentes(Incidente...): void
}

class WhatsApp{
 #enviar(Persona,String)
}

class CorreoElectronico{
 #enviar(Persona,String)
}

class EmailBuilder{
 -email: Email
 +build(): Email
}

CuandoSuceden ..|> FormaNotificacion

SinApuros ..|> FormaNotificacion
SinApuros ..> Incidente
SinApuros ..> Persona

WhatsApp ..|> Notificador

CorreoElectronico..|> Notificador
CorreoElectronico ..> EmailBuilder

Persona --> FormaNotificacion
Persona --> Notificador

@enduml