@startuml
class Entidad{
 -nombre: String
 -localizacion: Localizacion
 -establecimientos: List<Establecimiento>
 -tipoEntidad : TipoEntidad
}

enum TipoEntidad{
    LINEA_SUBTERRANEO
    LINEA_FERROCARRIL
    ORGANIZACION
}


class Municipio{
 +nombre: String
 +departamento: Departamento
}

class Departamento{
 +nombre: String
 +provincia: Provincia
}

class Provincia{
 +nombre: String
}

class Establecimiento{
 -nombre: String
 -tipo: TipoEstablecimiento
 -localizacion: Localizacion
 -servicios: List<PrestacionServicio>
}

enum TipoEstablecimiento{
 ESTACION
 SUCURSAL
}

class Servicio{
    -descripcion: String
}



class Comunidad{
    -nombre: String
    -listaAdministradores: Administrador
    -listaMiembros: Miembro
    -incidentes: List<Incidente>

    +abrirIncidente(): void
    +cerrarIncidente(): void
    -informarIncidente(Incidente): void
}

class Administrador{
 -persona: Persona

}

class Miembro{
 -persona: Persona
 -rolesServicio: List<RolMiembroServicio>
 +recibirIncidente(Incidente):void
 +estaAfectado(Servicio): bool
}

class RolMiembroServicio{
 -servicio: Servicio
 -afectado: bool
}

class Designado{
    -usuario: Usuario
}


class Persona{
    -usuario: Usuario
    -localizacionesDeInteres: List<Localizacion>
    -serviciosDeInteres: List<Servicio>
    -entidadesDeInteres: List<Entidad>
    -notificador: Notificador
    -formaNotificacion: FormaNotificacion
    -horariosSinApuros: List<HorarioSinApuros>

    +recibirIncidente(Incidente): void
    +notificarIncidente(Incidente...): void
    +notificarIncidentesPendientes(): void
}

class HorarioSinApuros{

    - persona: Persona
    - horario: LocalTime
}

class PrestacionServicio{
    -servicio: Servicio
    -estado: EstadoServicio
}

enum EstadoServicio{
    DISPONIBLE
    NO_DISPONIBLE
    MANTENIMIENTO
}


class Usuario{
    -username: String
    -password: String
}

class Localizacion{
 provincia: Provincia
 departamento: Departamento
 municipio: Municipio
}

class PrestadoraDeServicio{
 -usuario: Usuario
 -designado: Designado
 -entidades: List<Entidad>
}

class OrganismoDeControl{
 -usuario: Usuario
 -designado: Designado
 -entidades: List<Entidad>
}


class Incidente{
 -entidad: Entidad
 -establecimiento: Establecimiento
 -prestacionDeServicio: PrestacionDeServicio
 -creador: Miembro
 -comunidad: Comunidad
 -fechaDeCreacion: date
 -fechaDeCierre: date
 -observaciones: String

 +abierto(): bool
 +cerrar(): void
}

interface FormaNotificacion{
 +recibirIncidente(Incidente): void
 +notificarIncidentesPendientes(Persona): void
}

abstract class Notificador{
 +notificarIncidentes(Incidente...): void
}

Incidente -->"1" PrestacionServicio
Incidente -->"1" Establecimiento
Incidente -->"1" Persona

Localizacion --> Provincia
Localizacion --> Departamento
Localizacion --> Municipio


Comunidad *--"*" Miembro
Comunidad *--"*" Administrador
Comunidad -->"*" Incidente

Miembro --> Persona
Miembro -->"*" RolMiembroServicio
Administrador --> Persona

RolMiembroServicio --> Servicio

Persona --> Usuario
Persona -->"*" Localizacion
Persona -->"*" Servicio
Persona -->"*" Entidad
Persona -->"1" FormaNotificacion
Persona -->"1" Notificador
Persona -->"*" HorarioSinApuros

Entidad -->"1" Localizacion
Entidad -->"*" Establecimiento
Entidad --> TipoEntidad

Establecimiento --> TipoEstablecimiento
Establecimiento -->"1" Localizacion
Establecimiento -->"*" PrestacionServicio

PrestadoraDeServicio --> Usuario
PrestadoraDeServicio --> Designado
PrestadoraDeServicio -->"*" Entidad

OrganismoDeControl --> Usuario
OrganismoDeControl --> Designado
OrganismoDeControl -->"*" Entidad

Departamento --> Provincia
Municipio --> Departamento
Municipio --> Provincia

Designado --> Usuario

PrestacionServicio -->"1" EstadoServicio
PrestacionServicio -->"1" Servicio

@enduml