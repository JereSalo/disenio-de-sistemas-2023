@startuml

interface Ranking {
    +calcularValoresAsociados(List<ValorRanking>, RepoDeSujetosRanking): void
}

class PromedioTiempoCierre {
    +calcularValoresAsociados(List<ValorRanking>, RepoDeSujetosRanking): void
}

class CantidadDeIncidentes {
    +calcularValoresAsociados(List<ValorRanking>, RepoDeSujetosRanking): void
}

class GradoDeImpacto {
    +calcularValoresAsociados(List<ValorRanking>, RepoDeSujetosRanking): void
}

interface ValorRanking {
    +getSujeto(): Object
}

class ValorRankingEntidad {
    -entidad: Entidad
    +valor: float
    +getSujeto(): Object
}

class ValorRankingIncidente {
    -incidente: Incidente
    +valor: float
    +getSujeto(): Object
}

class CalculadorRanking {
    -repoDeResultadosRankings: RepoDeResultadosRankings
    -rankings : List<Ranking>
    -RepoDeSujetosRanking: repoDeSujetosRanking

    +generarTodosLosRankings(): void
}

class RepoDeResultadosRankings {
    +resultadosRankings: List<List<ValorRanking>>
}

class RepoDeSujetosRanking{
    +incidentes: List<Incidentes>
}

Ranking ..> ValorRanking
Ranking ..> RepoDeSujetosRanking

PromedioTiempoCierre ..|> Ranking
CantidadDeIncidentes ..|> Ranking
GradoDeImpacto ..|> Ranking

RepoDeSujetosRanking ..> ValorRanking

CalculadorRanking --> RepoDeResultadosRankings
CalculadorRanking --> Ranking
CalculadorRanking --> RepoDeSujetosRanking

ValorRankingEntidad ..|> ValorRanking
ValorRankingIncidente ..|> ValorRanking

@enduml